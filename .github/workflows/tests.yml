name: Tests Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  Test:
    needs: Linting
    name: ${{ matrix.os }}, ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        dev: [false]
        env:
          - ci/envs/37.yaml
          - ci/envs/38.yaml
        include:
          - env: ci/envs/38-dev.yaml
            os: ubuntu-latest
            dev: true

    steps:
      - uses: actions/checkout@v2

      - name: Cache Conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ matrix.env }}

      - name: Setup Conda and Install Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          use-only-tar-bz2: true
          channel-priority: "strict"
          environment-file: ${{ matrix.env }}

      - name: Check and Log Environment
        run: |
          python -V
          conda info
          conda list

      - name: Test with Pytest
        run: make test

      - name: Code Coverage
        uses: codecov/codecov-action@v1

  Build:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Build a binary wheel and a source tarball
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          python setup.py check
          make dist
