name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: ${{ matrix.os }}, ${{ matrix.python-version }}, ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        dev: [false]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        env: [ci/env/latest.yaml]
        include:
          - env: ci/env/38-minimal.yaml
            os: ubuntu-latest
            dev: false
            python-version: "3.8"
          - env: ci/env/39-minimal.yaml
            os: ubuntu-latest
            dev: false
            python-version: "3.9"
          - env: ci/env/310-minimal.yaml
            os: ubuntu-latest
            dev: false
            python-version: "3.10"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          environment-file: ${{ matrix.env }}
          python-version: ${{ matrix.python-version }}
          use-mamba: true

      - name: Check and Log Environment
        run: make info

      - name: Test with Pytest
        run: make test

      - name: Test Docstrings
        if: ${{ contains(matrix.env, 'latest') && contains(matrix.os, 'ubuntu') }}
        run: make doctest

      - uses: codecov/codecov-action@v3
