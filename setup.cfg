[metadata]
name = dtoolkit
description = Face the engineering of data preprocessing.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Zeroto521/my-data-toolkit
author = Zero <@Zeroto521>
author_email = Zeroto521@gmail.com
license = MIT
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: Microsoft :: Windows
    Operating System :: MacOS
    Operating System :: Unix
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: GIS
    Topic :: Scientific/Engineering :: Information Analysis
project_urls =
    Documentation = https://my-data-toolkit.readthedocs.io
    Bug Tracker = https://github.com/Zeroto521/my-data-toolkit/issues
    Source Code = https://github.com/Zeroto521/my-data-toolkit


[options]
packages = find:
install_requires = pandas >= 1.1.3
python_requires = >=3.7
include_package_data = True
zip_safe = False


# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.

[versioneer]
VCS = git
style = pep440-old
versionfile_source = dtoolkit/_version.py
versionfile_build = dtoolkit/_version.py
tag_prefix = v
parentdir_prefix = dtoolkit-


[flake8]
# Black enforces 88 characters line length
max_line_length = 88

ignore =
    E203,  # Space before : (needed for black formatting of slices)
    W503,  # Line break before binary operator (needed for black)


[coverage:run]
source = dtoolkit
branch = True


[coverage:report]
ignore_errors = False
show_missing = True

# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    AbstractMethodError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:

omit =
    */site-packages/*
    */test/*
    dtoolkit/_version.py
