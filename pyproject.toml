[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[project]
name = "my-data-toolkit"
dynamic = ["version"]
authors = [{ name = "Zero <@Zeroto521>", email = "Zeroto521@gmail.com" }]
description = "Face the engineering of data preprocessing."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.10"
dependencies = ["pandas>=2.0.3"]
classifiers = [
    "Development Status :: 3 - Alpha",

    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",

    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: Unix",

    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",

    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[project.urls]
Documentation = "https://my-data-toolkit.readthedocs.io"
Repository = "https://github.com/Zeroto521/my-data-toolkit"
Changelog = "https://my-data-toolkit.readthedocs.io/en/latest/changelog.html"

[project.optional-dependencies]
opt = ["scikit-learn >= 1.7", "packaging", "geopandas >= 1.1.0"]
test = ["pytest", "pytest-xdist", "pytest-cov", "pytest-doctestplus", "codecov"]
doc = [
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-toggleprompt",
    "myst-parser",
    "numpydoc",
    "ipython",
    "ipykernel",
    "nbsphinx",
]
sdist = ["build", "twine"]


[tool.setuptools.packages.find]
include = ["dtoolkit", "dtoolkit.*"]

# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
[tool.versioneer]
VCS = "git"
style = "pep440-old"
versionfile_source = "dtoolkit/_version.py"
versionfile_build = "dtoolkit/_version.py"
tag_prefix = "v"
parentdir_prefix = "dtoolkit-"

[tool.coverage.run]
source = ["dtoolkit"]
branch = true

[tool.coverage.report]
ignore_errors = false
show_missing = true
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:s
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "AbstractMethodError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
omit = ["dtoolkit/_version.py", "*/test/*", "*/site-packages/*"]

[tool.codespell]
ignore-words-list = "ba, filterin"
